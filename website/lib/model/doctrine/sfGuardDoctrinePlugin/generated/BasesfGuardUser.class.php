<?php
/*
 * Base class; DO NOT EDIT
 *
 * auto-generated by the sfDoctrine plugin
 */
class BasesfGuardUser extends sfDoctrineRecord
{
  
  
  public function setTableDefinition()
  {
    $this->setTableName('sf_guard_user');

    $this->hasColumn('id', 'integer', 4, array (  'primary' => true,  'autoincrement' => true,));
    $this->hasColumn('created_at', 'timestamp', null, array ());
    $this->hasColumn('updated_at', 'timestamp', null, array ());
    $this->hasColumn('username', 'string', 128, array (  'notnull' => true,));
    $this->hasColumn('algorithm', 'string', 128, array (  'default' => 'sha1',  'notnull' => true,));
    $this->hasColumn('salt', 'string', 128, array (  'notnull' => true,));
    $this->hasColumn('password', 'string', 128, array (  'notnull' => true,));
    $this->hasColumn('last_login', 'timestamp', null, array ());
    $this->hasColumn('is_active', 'boolean', null, array (  'default' => 1,  'notnull' => true,));
    $this->hasColumn('is_super_admin', 'boolean', null, array (  'default' => 0,  'notnull' => true,));
  }
  

  
  public function setUp()
  {
    $this->hasMany('sfGuardGroup as groups', array('refClass' => 'sfGuardUserGroup', 'local' => 'user_id', 'foreign' => 'group_id'));
    $this->hasMany('sfGuardPermission as permissions', array('refClass' => 'sfGuardUserPermission', 'local' => 'user_id', 'foreign' => 'permission_id'));
    $this->hasMany('sfGuardRememberKey as remember_key', array('local' => 'id', 'foreign' => 'user_id'));
  }
  
}
