Um eine DB-Verbindung mit Doctrine herzustellen, benutzen Sie einen gültigen DSN  - data source name (Name der Datenquelle).
Doctrine unterstützt sowohl PEAR/DB/MDB2 als auch PDO DSN. Wenn Sie mehr zu PDO DSN wissen möchten, lesen Sie [[php PDO->__construct()]].
 
Ein DSN besteht aus folgenden Teilen

||~ DSN Teil   ||~ Beschreibung ||
||  phptype    ||  von PHP benutzte DB (z.B. mysql , pgsql etc.) ||
||  dbsyntax   ||  verwendete Datenbaksyntax im Bezug auf SQL Syntax etc. ||
||  protocol   ||  Übertragunsprotokoll ( z.B. tcp, unix etc.) ||
||  hostspec   ||  Hostrechner (z.B. localhost)(Hostname[:Port]) ||
||  database   ||  Name der Dantenbank auf dem DBMS Server ||
||  username   ||  Username für Login ||
||  password   ||  Passwort für Login ||
||  proto_opts ||  Kann zusammen mit protocol benutzt werden||
||  option     ||  Zusätzliche Verbindungsoptionen angehängt im URL-Query String Format (Key/Value Paare getrennt mit &). Die folgende Tabelle zeigt eine unvollständige Auswahl an Optionen: ||

**Optionsliste**

||~ Name     ||~ Beschreibung ||
||  charset  ||  Einige Backends unterstützen das Setzen des Client Zeichensatzes.||
||  new_link ||  Einige RDBMS erzeugen keine neuen Verbindungen, wenn sie mehrfach mit dem gleichen Host verbinden. Diese Option versucht, immer eine neue Verbindung zu erzwingen. ||

Der DSN kann entweder als assoziatives Array oder als String übergeben werden. Die komplette Variante des String-Formats sieht so aus:

<code>phptype(dbsyntax)://username:password@protocol+hostspec/database?option=value</code>

Die meisten Schreibweisen werden unterstützt, z.B.:

<code>
phptype://username:password@protocol+hostspec:110//usr/db_file.db
phptype://username:password@hostspec/database
phptype://username:password@hostspec
phptype://username@hostspec
phptype://hostspec/database
phptype://hostspec
phptype:///database
phptype:///database?option=value&anotheroption=anothervalue
phptype(dbsyntax)
phptype
</code>

Zur Zeit werden folgende DB-Systeme unterstützt:

||~ Treibername ||~ Unerstützte Datenbank ||
||  fbsql       ||  FrontBase ||
||  ibase       ||  InterBase / Firebird (benötigt PHP 5) ||
||  mssql       ||  Microsoft SQL Server (NICHT für Sybase. Compile PHP --with-mssql) ||
||  mysql       ||  MySQL ||
||  mysqli      ||  MySQL (unterstütztz neues Authentication Protokoll) (benötigt PHP 5) ||
||  oci8        ||  Oracle 7/8/9/10    ||
||  pgsql       ||  PostgreSQL  ||
||  querysim    ||  QuerySim   ||
||  sqlite      ||  SQLite 2 ||

Ein zweites unterstütztes DSN Format ist:

<code>
phptype(syntax)://user:pass@protocol(proto_opts)/database
</code>

Wenn der Datenbankname, die Option Parameter, der Username oder das Passwort Zeichen enthalten, die zur Kennzeichnung von DSN Teilen reserviert sind, können Sie diese durch die entsprechenden URI Hexadezimal-Codes ersetzen:

||~ Zeichen   ||~ Hex Code ||
|| :          ||  %3a      ||
|| /          ||  %2f      || 
|| @          ||  %40      || 
|| +          ||  %2b      || 
|| (          ||  %28      || 
|| )          ||  %29      || 
|| ?          ||  %3f      || 
|| =          ||  %3d      || 
|| &          ||  %26      || 

Warnung 
Bitte beachten Sie, dass einige Features nicht von allen Datenbanksystemen unterstützt werden. 
 

+++ Beispiele

**Bespiel 1.** Verbindung zur Datenbank mit einer Socket-Connection

<code>
mysql://user@unix(/path/to/socket)/pear
</code>

**Bespiel 2.** Verbindung zur Datenbank über einen Nicht-Standard-Port

<code>
pgsql://user:pass@tcp(localhost:5555)/pear
</code>

**Bespiel 3.** Verbindung mit SQLite auf einem Unix Server mit zusätzliche Parameters (options)

<code>
sqlite:////full/unix/path/to/file.db?mode=0666
</code>

**Bespiel 4.** Verbindung mit SQLite auf einem Windows Server mit zusätzliche Parameters (options)

<code>
sqlite:///c:/full/windows/path/to/file.db?mode=0666
</code>

**Bespiel 5.** Verbingung mit MySQLi über SSL

<code>
mysqli://user:pass@localhost/pear?key=client-key.pem&cert=client-cert.pem
</code>