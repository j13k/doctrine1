Let's consider we have a mysql database called test with a single table called 'file'.

The file table has been created with the following sql statement:

CREATE TABLE file (
    id INT AUTO_INCREMENT NOT NULL,
    name VARCHAR(150),
    size BIGINT,
    modified BIGINT,
    type VARCHAR(10),
    content TEXT,
    path TEXT,
    PRIMARY KEY(id))
    
Now we would like to convert it into Doctrine record class. It can be achieved easily with the following code snippet:

<code type='php'>
require_once('lib/Doctrine.php');

spl_autoload_register(array('Doctrine', 'autoload'));

$conn = Doctrine_Manager::connection(new Doctrine_Db('mysql://root:dc34@localhost/test'));

// import method takes one parameter: the import directory (the directory where
// the generated record files will be put in
$conn->import->import('myrecords');
</code>

That's it! Now there should be a file called File.php in your myrecords directory. The file should look like:

<code type='php'>
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 * Created: Saturday 10th of February 2007 01:03:15 PM
 */
class File extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->hasColumn('id', 'integer', 4, array('notnull' => true,
                                                   'primary' => true,
                                                   'autoincrement' => true));
        $this->hasColumn('name', 'string', 150);
        $this->hasColumn('size', 'integer', 8);
        $this->hasColumn('modified', 'integer', 8);
        $this->hasColumn('type', 'string', 10);
        $this->hasColumn('content', 'string', null);
        $this->hasColumn('path', 'string', null);
    }
    public function setUp()
    {

    }
}
</code>
